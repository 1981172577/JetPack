apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    flavorDimensions "core"
    defaultConfig {
        applicationId "com.migrsoft.jetpack"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        buildConfigField("long", "CONNECTION_TIME_OUT_SECOND", '40')
        buildConfigField("long", "READ_TIME_OUT", '300')
        buildConfigField("long", "WRITE_TIME_OUT", '300')

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'LOG_DEBUG', 'true'
        }
        debug{
            buildConfigField 'boolean', 'LOG_DEBUG', 'false'
        }
    }

    productFlavors {
        dev {
            dimension "core"
            buildConfigField("String", "BASE_URL", '"http://pos.dianxiaohuo.cn/"')//开发环境
        }
        kingking {
            dimension "core"
            buildConfigField("String", "BASE_URL", '"http://pos.chinakingking.com/"')//金王环境
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.gson:gson:2.8.0'
    }
}

dependencies {
    def lifecycle_version = "1.1.1"
    def room_version = "1.1.1"
    def dagger2 = "2.15"
    def rxjava="2.1.0"
    def rxandroid="2.1.0"
    def retrofit2 = "2.3.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version"
    // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
    // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"


    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version" // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$room_version"

    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"

    def paging_version = "1.0.1"

    implementation "android.arch.paging:runtime:$paging_version"

    // alternatively - without Android dependencies for testing
    testImplementation "android.arch.paging:common:$paging_version"

    // optional - RxJava support
//    implementation "android.arch.paging:rxjava2:$paging_version"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2"

    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2"
    implementation 'com.annimon:stream:1.2.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2"

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.android.support:multidex:1.0.3'

    annotationProcessor 'com.android.databinding:compiler:3.1.4'
}
